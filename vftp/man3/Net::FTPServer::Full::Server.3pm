.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::FTPServer::Full::Server 3pm"
.TH Net::FTPServer::Full::Server 3pm "2012-11-29" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::FTPServer::Full::Server \- The full FTP server personality
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  ftpd.sh [\-d] [\-v] [\-p port] [\-s] [\-S] [\-V] [\-C conf_file]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Net::FTPServer::Full::Server\*(C'\fR is the full \s-1FTP\s0 server
personality. This personality implements a complete
\&\s-1FTP\s0 server with similar functionality to \fIwu-ftpd\fR.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "$rv = $self\->authentication_hook ($user, $pass, $user_is_anon)" 4
.el .IP "\f(CW$rv\fR = \f(CW$self\fR\->authentication_hook ($user, \f(CW$pass\fR, \f(CW$user_is_anon\fR)" 4
.IX Item "$rv = $self->authentication_hook ($user, $pass, $user_is_anon)"
Perform login against \f(CW\*(C`/etc/passwd\*(C'\fR, the \s-1PAM\s0 database or the
\&\f(CW\*(C`password file\*(C'\fR.
.ie n .IP "$self\->user_login_hook ($user, $user_is_anon)" 4
.el .IP "\f(CW$self\fR\->user_login_hook ($user, \f(CW$user_is_anon\fR)" 4
.IX Item "$self->user_login_hook ($user, $user_is_anon)"
Hook: Called just after user \f(CW$user\fR has successfully logged in.
.ie n .IP "$dirh = $self\->root_directory_hook;" 4
.el .IP "\f(CW$dirh\fR = \f(CW$self\fR\->root_directory_hook;" 4
.IX Item "$dirh = $self->root_directory_hook;"
Hook: Return an instance of Net::FTPServer::FullDirHandle
corresponding to the root directory.
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard Jones (rich@annexia.org).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2000 Biblio@Tech Ltd., Unit 2\-3, 50 Carnwath Road,
London, \s-1SW6 3EG, UK\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CWNet::FTPServer(3)\fR,
\&\f(CWAuthen::PAM(3)\fR,
\&\f(CWNet::FTP(3)\fR,
\&\f(CWperl(1)\fR,
\&\s-1RFC 765,
RFC 959,
RFC 1579,
RFC 2389,
RFC 2428,
RFC 2577,
RFC 2640,\s0
Extensions to \s-1FTP\s0 Internet Draft draft\-ietf\-ftpext\-mlst\-NN.txt.
