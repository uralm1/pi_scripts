import java.time.Instant
import java.time.Duration

val BOILER_DET_POWER = 1000
var boolean boiler_heated_flag
var boolean room_heated60_flag
var boolean room_heated75_flag
var Instant very_high_power_timestamp

rule "System rebooted telegram"
when
  System started
then
  boiler_heated_flag = true
  room_heated60_flag = false
  room_heated75_flag = false
  very_high_power_timestamp = Instant.EPOCH
  sendTelegram("bot1", "Перезагрузка системы")
end

rule "Box treg telegram"
when
  Item c2_treg_on_relay changed
then
  sendTelegram("bot1", "Терморегулятор подогрева шкафа " + if (c2_treg_on_relay.state == ON) "активирован" else "отключен")
end

rule "Convector telegram"
when
  Item c3_relay1 changed
then
  if (c3_treg_on_relay1.state == ON) { return; }
  sendTelegram("bot1", "Батарея " + if (c3_relay1.state == ON) "включена" else "выключена")
end

rule "Convector treg telegram"
when
  Item c3_treg_on_relay1 changed
then
  sendTelegram("bot1", "Терморегулятор батареи " + if (c3_treg_on_relay1.state == ON) "активирован" else "отключен")
end

rule "Boiler telegram"
when
  Item c4_relay1 changed
then
  var String s
  if (c4_relay1.state == ON) {
    s = "включен"
  } else {
    s = "выключен"
    boiler_heated_flag = true
  }
  sendTelegram("bot1", "Бойлер " + s)
end

rule "Tepl.pol telegram"
when
  Item c4_relay2 changed
then
  sendTelegram("bot1", "Теплый пол " + if (c4_relay2.state == ON) "включен" else "выключен")
end

rule "Boiler heated and high powered telegram"
when
  Item p1_p changed
then
  val p = p1_p.state
  if (c4_relay1.state == ON) {
    if (p >= BOILER_DET_POWER) {
      boiler_heated_flag = false
    } else {
      if (!boiler_heated_flag) {
        sendTelegram("bot1", "Бойлер нагрелся!")
        boiler_heated_flag = true
      }
    }
  }
  val Instant cur_t = Instant.now()
  if (p >= 450 && c3_relay1.state != ON && c4_relay1.state != ON && c4_relay2.state != ON
      && Duration.between(very_high_power_timestamp, cur_t).toMinutes() >= 60) {
    sendTelegram("bot1", "Что-то включено (" + p + "Вт)")
    very_high_power_timestamp = cur_t
  }
end

rule "Room heated telegram"
when
  Item c3_temp_out changed
then
  val t = c3_temp_out.state
  if (t < 38) {
    if (room_heated60_flag) room_heated60_flag = false
    if (room_heated75_flag) room_heated75_flag = false
  }
  if (!room_heated60_flag && t >= 60) {
    sendTelegram("bot1", "В парной " + t + " градусов!")
    room_heated60_flag = true
  }
  if (!room_heated75_flag && t >= 75) {
    sendTelegram("bot1", "В парной " + t + " градусов!!!")
    room_heated75_flag = true
  }
end
